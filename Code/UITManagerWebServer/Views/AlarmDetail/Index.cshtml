@model UITManagerWebServer.Models.Alarm
@{
    ViewData["Title"] = "Alarm Details";
}

<div class="container-fluid py-1" style="max-width: 1700px;" xmlns="http://www.w3.org/1999/html">
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="d-flex align-items-center mt-3">
                <h1 class="h2 fw-bold me-3">Machine's Alarm Details</h1>
            </div>
            @Html.Partial("_AlarmInformations")
        </div>
        <div class="col-md-6">
            @Html.Partial("_Notes")
        </div>
        <div class="col-md-6">
            @Html.Partial("_MachineInformations")
        </div>
    </div>
</div>
<script>
    document.getElementById('Search').addEventListener('keyup', function () {
        const searchValue = this.value.toLowerCase();
        const noteTable = document.getElementById('notes-table');
        const tableRows = noteTable.querySelectorAll('tbody tr');
        if (!noteTable.classList.contains('ignore')) {
            tableRows.forEach(row => {
                const cells = row.querySelectorAll('taaa');
                const match = Array.from(cells).some(cell => cell.textContent.toLowerCase().includes(searchValue));
                row.style.display = match ? '' : 'none';
            });
        }
    });

    function updateAlarmStatus(alarmId, status) {
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;
        if (!token) {
            alert('CSRF token is missing.');
            return;
        }
        fetch(`/AlarmDetail/UpdateStatus`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': token
            },
            body: JSON.stringify({id: alarmId, status: status})
        }).then(response => {
            if (!response.ok) {
                alert('Error updating status.');
            }
        }).catch(error => {
            alert('Network error updating status.');
        });
    }

    async function updateAlarmAttribution(alarmId, userId) {
        const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value;

        if (!token) {
            alert('CSRF token is missing.');
            return;
        }

        if (!alarmId || !userId) {
            alert('Invalid alarm or user ID.');
            return;
        }
        try {
            const response = await fetch('/AlarmDetail/Attribution', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': token
                },
                body: JSON.stringify({
                    id: alarmId,
                    userId: userId
                })
            });
            if (response.ok) {
                const result = await response.json();
            } else {
                alert('Error: Failed to update attribution. Status code: ' + response.status);
            }
        } catch (error) {
            console.error('Network or server error:', error);
            alert('An error occurred while updating the attribution.');
        }
    }
</script>
