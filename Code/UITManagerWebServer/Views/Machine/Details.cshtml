@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@functions {

    private void GetSavedSortingAndFilterInfoExcept(string? name)
    {
        if (name != "sortOrder")
        {
            <input type="hidden" name="sortOrder" value="@ViewData["SortOrder"]"/>
        }

        if (name != "authorFilter")
        {
            <input type="hidden" name="authorFilter" value="@ViewData["AuthorFilter"]"/>
        }

        if (name != "solutionFilter")
        {
            <input type="hidden" name="solutionFilter" value="@ViewData["SolutionFilter"]"/>
        }

        if (name != "typeFilter")
        {
            <input type="hidden" name="typeFilter" value="@ViewData["TypeFilter"]"/>
        }

        if (name != "noteDateFilter")
        {
            <input type="hidden" name="noteDateFilter" value="@ViewData["SortOrderNote"]"/>
        }
        
        <input type="hidden" name="id" value="@Model.Id"/>
        
    }
}

<div class="container-fluid py-5 px-4" style="max-width: 1700px;">
    <div class="d-flex w-100 justify-content-between">
        <h1 class="fs-2 fw-bold me-3 text-nowrap">
            @Model.Name
        </h1>
            
        <form asp-action="ChangeWorking" method="post">
            <input type="submit" class="btn-check" id="isWorking" autocomplete="off"  @(Model.IsWorking?"checked":"")>
            @{
                GetSavedSortingAndFilterInfoExcept(null);
            }
            <label class="btn  @(Model.IsWorking ? "btn-success" : "btn-danger")" for="isWorking">
                Current machine state: @(Model.IsWorking ? "Working" : "Not working")
            </label>
        </form>
    </div>

    <span class="badge bg-opacity-50 bg-primary p-2 rounded-3 fs-6 text-white">Last seen  @Model.LastSeen.ToString("dd/MM/yyyy HH:mm")</span>
    <div class="row mt-4">
        @(await Html.PartialAsync("_MachineInformation", Model, ViewData))
        
        <div class="col-md-6">
            @(await Html.PartialAsync("_MachineAlarms", Model, ViewData))
            @(await Html.PartialAsync("_MachineNotes", Model, ViewData))
        </div>
        
    </div>
</div>

<div class="modal fade" id="notesModal" tabindex="-1" aria-labelledby="notesModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="notesModalLabel">Information on Notes</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    This section contains important notes related to the machines, classified as either solutions
                    or
                    follow-up notes.
                    You can filter them by solution status or by author.
                </p>
                <p>
                    You can also sort the notes by date to see the most recent or oldest entries.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>