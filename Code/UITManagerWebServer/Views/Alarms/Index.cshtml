@model IEnumerable<UITManagerWebServer.Models.Alarm>

@{
    ViewData["Title"] = "Alarms";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form method="post" id="alarm-status-update">
    @Html.AntiForgeryToken()
</form>

@functions {

    string GetHeaderClass(string currentSortOrder, string column)
    {
        if (currentSortOrder == column || currentSortOrder == $"{column}_desc")
        {
            return "bg-selected-header";
        }

        return string.Empty;
    }

}

@functions {

    string GetSortIcon(string currentSortOrder, string column)
    {
        if (currentSortOrder == column)
        {
            return "bi bi-sort-down";
        }
        else if (currentSortOrder == $"{column}_desc")
        {
            return "bi bi-sort-up";
        }

        return "bi bi-arrow-down-up";
    }

}


@functions {

    string GetSeverityClass(UITManagerWebServer.Models.SeverityLevel severity)
    {
        return severity switch
        {
            UITManagerWebServer.Models.SeverityLevel.Critical => "text-danger",
            UITManagerWebServer.Models.SeverityLevel.High => "text-warning",
            UITManagerWebServer.Models.SeverityLevel.Medium => "text-warning",
            UITManagerWebServer.Models.SeverityLevel.Low => "text-success",
            UITManagerWebServer.Models.SeverityLevel.InfoOnly => "text-info",
            UITManagerWebServer.Models.SeverityLevel.Warning => "text-secondary",
            UITManagerWebServer.Models.SeverityLevel.NonCritical => "text-muted",
            _ => "text-body"
        };
    }

}

<div class="container-fluid py-5 px-4" style="max-width: 1700px;">
    <div class="row mb-4">
        <div class="col-lg-12">
            <h1 class="h2 text-start fw-bold">Alarms</h1>
            <p class="text-start text-muted">Manage and monitor alarm statuses efficiently.</p>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-12">
            <div class="card shadow-sm border-0 rounded">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover table-striped align-middle">
                            <thead class="table-light">
                            <tr>
                                <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Machine")">
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["MachineSortParm"]"
                                       class="text-decoration-none text-dark">
                                        Host <i class="@GetSortIcon(ViewData["SortOrder"]?.ToString(), "Machine")"></i>
                                    </a>
                                </th>
                                <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Status")">
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]"
                                       class="text-decoration-none text-dark">
                                        Status <i class="@GetSortIcon(ViewData["SortOrder"]?.ToString(), "Status")"></i>
                                    </a>
                                </th>
                                <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Severity")">
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["SeveritySortParm"]"
                                       class="text-decoration-none text-dark">
                                        Severity <i
                                            class="@GetSortIcon(ViewData["SortOrder"]?.ToString(), "Severity")"></i>
                                    </a>
                                </th>
                                <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "AlarmGroup")">
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["AlarmGroupSortParm"]"
                                       class="text-decoration-none text-dark">
                                        Alarm <i
                                            class="@GetSortIcon(ViewData["SortOrder"]?.ToString(), "AlarmGroup")"></i>
                                    </a>
                                </th>
                                <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Date")">
                                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                                       class="text-decoration-none text-dark">
                                        Date <i class="@GetSortIcon(ViewData["SortOrder"]?.ToString(), "Date")"></i>
                                    </a>
                                </th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@item.Machine.Id"
                                           class="text-primary text-decoration-none">
                                            @item.Machine.Name
                                        </a>
                                    </td>
                                    <td>
                                        <select class="form-select form-select-sm"
                                                onchange="updateAlarmStatus(@item.Id, this.value)">
                                            @foreach (var statusType in ViewData["AlarmStatusTypes"] as IEnumerable<UITManagerWebServer.Models.AlarmStatusType>)
                                            {
                                                <option value="@statusType.Name">@statusType.Name</option>
                                            }
                                        </select>
                                    </td>

                                    <td>
                                        <span class="@GetSeverityClass(item.NormGroup.Severity)">
                                            @item.NormGroup.Severity
                                        </span>
                                    </td>
                                    <td class="text-secondary">
                                        @Html.DisplayFor(modelItem => item.NormGroup.Name)
                                    </td>
                                    <td class="text-secondary">
                                        @Html.DisplayFor(modelItem => item.TriggeredAt)
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

