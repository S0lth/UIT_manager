@using Microsoft.AspNetCore.Mvc.TagHelpers
@using UITManagerWebServer.Helpers
@model IEnumerable<UITManagerWebServer.Models.Note>

@{
    ViewData["Title"] = "Notes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.6/dist/chart.umd.min.js"></script>

<div class="container-fluid px-4" style="max-width: 1700px;">
    <div class="row mb-2 fixed">
        <div class="col-lg-12 mb-0 ">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="h2 fw-bold">Notes</h1>
                <form method="get"
                      class="d-flex flex-wrap gap-3 px-0 py-0 align-items-center justify-content-end">
                    <div class="form-group m-0 w-auto">
                        <input type="text" name="search" class="form-control" placeholder="Search..."
                               value="@ViewData["Search"]"/>
                    </div>

                    <div class="d-flex align-items-center gap-3">
                        <div class="d-flex align-items-center text-muted" style="margin-right: 10px;">
                            <span>Filter</span>
                            <span class="ms-1">by</span>
                        </div>

                        <div class="form-group mb-0">
                            <select asp-for="@ViewData["IsSolution"]" name="IsSolution" class="form-select form-select-sm">
                                <option value="" disabled selected>Type</option>
                                <option value="">All</option>
                                <option value="true">Solution</option>
                                <option value="false">Follow-up</option>
                            </select>
                        </div>

                        <div class="form-group mb-0">
                            <select asp-for="@ViewData["AuthorId"]" name="AuthorId" class="form-select form-select-sm">
                                <option value="" disabled selected>Author</option>
                                <option value="">All</option>
                                @foreach (var author in ViewBag.Authors)
                                {
                                    <option value="@author.Id">
                                        @author.LastName @author.FirstName
                                    </option>
                                }
                                @* Liste des auteurs *@
                            </select>
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary btn-sm">Filter</button>
                            <a href="@Url.Action("Index")" class="btn btn-secondary btn-sm">Reset</a>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>


        <div class="card shadow-sm border-0 rounded">
            <div class="card-body">
                <div class="table-responsive" style="max-height: 750px; overflow-y: auto;">
                    <table class="table table-hover table-striped align-middle">
                        <thead class="table-lightfix sticky-top">
                        <tr>
                            <th class="@ViewHelpers.GetHeaderClass(ViewData["SortOrder"]?.ToString(), "title")">
                                <a asp-action="Index"
                                   asp-route-search="@ViewData["Search"]"
                                   asp-route-isSolution="@ViewData["IsSolution"]"
                                   asp-route-authorId="@ViewData["AuthorId"]"
                                   asp-route-sortOrder="@ViewData["TitleSortParm"]?.ToString()"
                                   class="text-decoration-none text-dark">
                                    @Html.DisplayNameFor(model => model.Title)
                                    <i class="bi @ViewHelpers.GetSortIcon(ViewData["SortOrder"]?.ToString(), "title")"></i>
                                </a>
                            </th>
                            <th class="@ViewHelpers.GetHeaderClass(ViewData["SortOrder"]?.ToString(), "machine")">
                                <a asp-action="Index"
                                   asp-route-search="@ViewData["Search"]"
                                   asp-route-isSolution="@ViewData["IsSolution"]"
                                   asp-route-authorId="@ViewData["AuthorId"]"
                                   asp-route-sortOrder="@ViewData["MachineSortParm"]?.ToString()"
                                   class="text-decoration-none text-dark">
                                    Host
                                    <i class="bi @ViewHelpers.GetSortIcon(ViewData["SortOrder"]?.ToString(), "machine")"></i>
                                </a>
                            </th>
                            <th class="@ViewHelpers.GetHeaderClass(ViewData["SortOrder"]?.ToString(), "createdat")">
                                <a asp-action="Index"
                                   asp-route-search="@ViewData["Search"]"
                                   asp-route-isSolution="@ViewData["IsSolution"]"
                                   asp-route-authorId="@ViewData["AuthorId"]"
                                   asp-route-sortOrder="@ViewData["CreatedAtSortParm"]?.ToString()"
                                   class="text-decoration-none text-dark">
                                    Date
                                    <i class="bi @ViewHelpers.GetSortIcon(ViewData["SortOrder"]?.ToString(), "createdat")"></i>
                                </a>
                            </th>
                            <th class="@ViewHelpers.GetHeaderClass(ViewData["SortOrder"]?.ToString(), "author")">
                                <a asp-action="Index"
                                   asp-route-search="@ViewData["Search"]"
                                   asp-route-isSolution="@ViewData["IsSolution"]"
                                   asp-route-authorId="@ViewData["AuthorId"]"
                                   asp-route-sortOrder="@ViewData["AuthorSortParm"]?.ToString()"
                                   class="text-decoration-none text-dark">
                                    @Html.DisplayNameFor(model => model.Author)
                                    <i class="bi @ViewHelpers.GetSortIcon(ViewData["SortOrder"]?.ToString(), "author")"></i>
                                </a>
                            </th>
                            <th class="@ViewHelpers.GetHeaderClass(ViewData["SortOrder"]?.ToString(), "issolution")">
                                <a asp-action="Index"
                                   asp-route-search="@ViewData["Search"]"
                                   asp-route-isSolution="@ViewData["IsSolution"]"
                                   asp-route-authorId="@ViewData["AuthorId"]"
                                   asp-route-sortOrder="@ViewData["IsSolutionSortParm"]?.ToString()"
                                   class="text-decoration-none text-dark">
                                    Type
                                    <i class="bi @ViewHelpers.GetSortIcon(ViewData["SortOrder"]?.ToString(), "issolution")"></i>
                                </a>
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @if (!Model.Any())
                        {
                            <tr>
                                <td colspan="5" class="text-center px-3 py-2">
                                    <div class="alert alert-secondary mb-0" role="alert">
                                        No notes written.
                                    </div>
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="px-3 py-2"
                                        style="max-width: 300px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                                        <a asp-controller="Note" asp-action="Details" asp-route-id="@item.Id"
                                           class="text-primary text-decoration-none text-truncate">
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </a>
                                    </td>

                                    <td class="px-3 py-2">
                                        <a asp-controller="Machine" asp-action="Details" asp-route-id="@item.Machine.Id"
                                           class="text-primary text-decoration-none">
                                            @Html.DisplayFor(modelItem => item.Machine.Name)
                                        </a>
                                    </td>
                                    <td class="px-3 py-2 text-secondary">@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                                    <td class="px-3 py-2 text-secondary">@Html.DisplayFor(modelItem => item.Author.LastName) @Html.DisplayFor(modelItem => item.Author.FirstName)</td>
                                    <td class="px-3 py-2">
                                        @if (item.IsSolution)
                                        {
                                            <span class="badge bg-success">Solution</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Follow-up Note</span>
                                        }
                                    </td>
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>