@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src=" https://cdn.jsdelivr.net/npm/chart.js@4.4.6/dist/chart.umd.min.js "></script>


@functions {

    string GetHeaderClass(string currentSortOrder, string column)
    {
        if (currentSortOrder == column || currentSortOrder == $"{column}_desc")
        {
            return "bg-selected-header";
        }

        return string.Empty;
    }

}

@functions {

    string GetSeverityClass(UITManagerWebServer.Models.SeverityLevel severity)
    {
        return severity switch
        {
            UITManagerWebServer.Models.SeverityLevel.Critical => "text-danger",
            UITManagerWebServer.Models.SeverityLevel.High => "text-warning",
            UITManagerWebServer.Models.SeverityLevel.Medium => "text-warning",
            UITManagerWebServer.Models.SeverityLevel.Low => "text-success",
            UITManagerWebServer.Models.SeverityLevel.InfoOnly => "text-info",
            UITManagerWebServer.Models.SeverityLevel.Warning => "text-secondary",
            UITManagerWebServer.Models.SeverityLevel.NonCritical => "text-muted",
            _ => "text-body"
        };
    }

}

@functions{

    string GetIsSolutionIcon(bool sol)
    {
        return sol ? "badge bg-success" : "badge bg-secondary";
    }
    
    string GetIsSolutionText(bool sol)
    {
        return sol ? "Solution" : "Follow-Up Note";
    }

}

@functions {

    string GetSortIcon(string currentSortOrder, string column)
    {
        if (currentSortOrder == column)
        {
            return "bi bi-sort-down";
        }
        else if (currentSortOrder == $"{column}_desc")
        {
            return "bi bi-sort-up";
        }

        return "bi bi-arrow-down-up";
    }

}

<div class="container-fluid py-5">
    <div class="row justify-content-center mb-4">
        <div class="col-lg-12 ">
            <h1>Welcome O. Roger 👋 </h1>
        </div>
    </div>

    <div class="row mt-4">
 
        <div class="col-md-6">
            <div class="fs-5 card shadow-sm border-0 rounded flex-row mb-4 py-3 ">
                <span class="text-danger fw-bold  mx-2">@Model.MachinesWithAlarms</span> machines with alarms triggered out of
                <span class="fw-bold  mx-2">@Model.TotalMachines</span>.
            </div>            
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Oldest unprocessed alarms</h5>

                    <div class=" align-items-center">
                        <div>
                            <div class="row justify-content-center">
                                <div class="col-lg-12">
                                    <div class="card shadow-sm border-0 rounded">
                                        <div class="card-body">
                                            <table class="table table-hover table-striped table-bordered rounded">
                                                <thead class="table-light">
                                                <tr>
                                                    <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Machine")">
                                                        Host

                                                    </th>
                                                    <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Status")">
                                                        Status
                                                    </th>
                                                    <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Severity")">
                                                        Severity

                                                    </th>
                                                    <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "AlarmGroup")">
                                                        Alarm
                                                    </th>
                                                    <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Date")">
                                                        Date
                                                    </th>
                                                </tr>
                                                </thead>
                                                <tbody>
                                                @foreach (var item in Model.OldestUnprocessedAlarms)
                                                {
                                                    <tr>
                                                        <!-- Host -->
                                                        <td>@item.Machine?.Name</td>

                                                        <!-- Status -->
                                                        <td>@item.AlarmStatus?.StatusType.Name</td>
                                                        <td>
                                                            <!-- Severity -->
                                                            <span class="@GetSeverityClass(item.NormGroup.Severity)">
                                                                @item.NormGroup?.Severity
                                                            </span>
                                                        </td>
                                                        <!-- Alarm -->
                                                        <td>@item.NormGroup?.Name</td>

                                                        <!-- Date -->
                                                        <td>@item.TriggeredAt.ToString("yyyy-MM-dd HH:mm")</td>


                                                    </tr>
                                                }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>

            <!-- Most Recent Alarms -->
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Alarm distribution by arlam type</h5>
                    <div>
                        <canvas id="myChart"></canvas>

                        <script>
                                const alarmData = @Html.Raw(ViewData["AlarmTypeOccurrences"]);

                                const labels = Object.keys(alarmData);
                                const data = Object.values(alarmData);

                                const ctx = document.getElementById('myChart').getContext('2d');
                                new Chart(ctx, {
                                type: 'pie', 
                                data: {
                                labels: labels, 
                                datasets: [{
                                label: 'Number of Occurrences',
                                data: data, 
                                borderWidth: 1
                            }]
                            },
                                options: {
                                responsive: true,
                                maintainAspectRatio: true, // Maintient un ratio ajusté
                                aspectRatio: 3, 
                                responsive: true,
                                plugins: {
                                legend: {
                                display: true,
                                position: 'top',
                            },
                                title: {
                                display: true,
                                text: 'Alarm Type Distribution'
                            }
                            },
                                    scales: {
                                        x: {
                                            display: false // Désactive l'axe X
                                        },
                                        y: {
                                            display: false // Désactive l'axe Y
                                        }
                                    }
                            }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Column -->
        <div class="col-md-6">
            <!-- 5 New Data -->
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">5 most recently triggered new alarms</h5>
                    <table class="table table-hover table-striped table-bordered rounded">

                        <thead>
                        <tr>
                            <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Machine")">
                                Host
                            </th>
                            <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Status")">
                                Status
                            </th>
                            <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Severity")">
                                Severity
                            </th>
                            <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "AlarmGroup")">
                                Alarm
                            </th>
                            <th class="@GetHeaderClass(ViewData["SortOrder"]?.ToString(), "Date")">
                                Date
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model.RecentNewAlarms)
                        {
                            <tr>
                                <td>@item.Machine?.Name</td>
                                <td>@item.AlarmStatus?.StatusType.Name</td>
                                <td>
                                    <span class="@GetSeverityClass(item.NormGroup?.Severity)">
                                        @item.NormGroup?.Severity
                                    </span>
                                </td>
                                <td>@item.NormGroup?.Name</td>
                                <td>@item.TriggeredAt.ToString("yyyy-MM-dd HH:mm")</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Last notes</h5>
                    <table class="table table-hover table-striped table-bordered rounded">

                        <thead>
                        <tr>
      
                            <th>
                                Machine
                            </th>
                            <th>
                                Content
                            </th>
                            <th>
                                Created At
                            </th>
                            <th>
                                Tag
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var note in Model.LastNotes)
                        {
                            <tr>
                                <td>@note.Machine?.Name</td>
                                <td>@note.Content</td>
                                <td>@note.CreatedAt</td>

                                <td>

                                    <span class="@GetIsSolutionIcon(note.IsSolution)">
                                        @GetIsSolutionText(note.IsSolution)
                                    </span>

                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>