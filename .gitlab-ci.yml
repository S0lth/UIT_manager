image: mcr.microsoft.com/dotnet/sdk:8.0

stages:
  - build
  - test
  - deploy
  - publish_docs

variables:
  PROJECT_NAME: UITManagerAgent
  PROJECT_NAME_TEST: UITManagerAgent.Tests
  BUILD_CONFIGURATION: Debug
  DOC_OUTPUT: "$CI_PROJECT_DIR/Code/docs"
  DOC_XML_PATH: "$CI_PROJECT_DIR/Code/$PROJECT_NAME/bin/$BUILD_CONFIGURATION/net8.0/Documentation.xml"

build:
  stage: build
  script:
    - dotnet restore $CI_PROJECT_DIR/Code/$PROJECT_NAME/$PROJECT_NAME.sln  
    - dotnet build --no-restore $CI_PROJECT_DIR/Code/$PROJECT_NAME/$PROJECT_NAME.sln -c $BUILD_CONFIGURATION
  artifacts:
    paths:
      - "$CI_PROJECT_DIR/Code/$PROJECT_NAME/bin/$BUILD_CONFIGURATION"
      - "$CI_PROJECT_DIR/Code/$PROJECT_NAME_TEST/bin/$BUILD_CONFIGURATION"
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test:
  stage: test
  script:
    - dotnet --version 
    - dotnet test --no-build "$CI_PROJECT_DIR/Code/$PROJECT_NAME/$PROJECT_NAME.sln" -c $BUILD_CONFIGURATION
  dependencies:
    - build
  artifacts:
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

deploy:
  stage: deploy
  script:
    - echo "Déploiement des artefacts depuis ./Code/$PROJECT_NAME/bin/$BUILD_CONFIGURATION pour l'environnement de développement"
  artifacts:
    paths:
      - "./Code/$PROJECT_NAME/bin/$BUILD_CONFIGURATION"
    expire_in: 1 week
  dependencies:
    - build
    - test
  environment:
    name: development
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

publish_docs:
  stage: publish_docs
  image: mcr.microsoft.com/dotnet/sdk:8.0
  dependencies:
    - build
  before_script:
    - apt-get update && apt-get install -y unzip 
    - curl -L https://github.com/dotnet/docfx/releases/download/v2.56/docfx.zip -o docfx.zip
    - unzip docfx.zip -d /docfx
    - export PATH=$PATH:/docfx
  script:
    - mkdir -p $DOC_OUTPUT
    - chmod +x Code/generate_docfx_json.sh
    - ./Code/generate_docfx_json.sh 
    - docfx docfx.json
    - git clone "https://oauth2:${GITLAB_TOKEN}@gitlab.com/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME.wiki.git" wiki
    - cp -r $DOC_OUTPUT/* wiki/
    - cd wiki
    - git add .
    - git commit -m "Update generated documentation"
    - git push origin main
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"


